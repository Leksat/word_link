<?php

/**
 * @file
 * Tests for the Word Link module.
 */

/**
 * Base class for Word Link web test cases.
 */
class WordLinkWebTestCase extends DrupalWebTestCase {
  protected $privileged_user;

  public static function getInfo() {
    return array(
      'name' => 'Word Link',
      'description' => 'Test word link functional.',
      'group' => 'Word Link',
    );
  }

  public function setUp() {
    parent::setUp(array('word_link'));

    // Create and log in our privileged user.
    $this->privileged_user = $this->drupalCreateUser(array(
      'view word link',
      'create word link',
      'edit word link',
      'delete word link',
    ));
    $this->drupalLogin($this->privileged_user);
  }

  /**
   * Tests creation and editing of a word.
   */
  public function testWordLinkCreate() {
    // Create word to edit.
    $edit = array();
    $edit['text'] = $this->randomName(8);
    $edit['weight'] = 0;
    $edit['url'] = 'http://drupal.org';
    $edit['class'] = $this->randomName(8);
    $this->drupalPost('admin/config/content/word-link/add', $edit, t('Save'));
    $this->assertRaw(
      t(
        'Word %text has been @action.',
        array(
          '%text' => $edit['text'],
          '@action' => 'created',
        )
      )
    );

    $words = word_link_load_all();
    $word = (array) current($words);
    unset($word['text_lower']);
    $word['text'] = $this->randomName(8);

    $this->drupalPost('admin/config/content/word-link/edit/' . $word['id'], $word, t('Save'));
    $this->assertRaw(
      t(
        'Word %text has been @action.',
        array(
          '%text' => $word['text'],
          '@action' => 'updated',
        )
      )
    );

    $this->drupalGet('admin/config/content/word-link/delete/' . $word['id']);
    $this->assertRaw(t('Are you sure you want to delete %title?', array('%title' => $word['text'])));
    $this->drupalPost('admin/config/content/word-link/delete/' . $word['id'], array(), t('Delete'));
    $this->assertRaw(
      t(
        'Word %text has been deleted.',
        array(
          '%text' => $word['text'],
        )
      )
    );
  }
}
